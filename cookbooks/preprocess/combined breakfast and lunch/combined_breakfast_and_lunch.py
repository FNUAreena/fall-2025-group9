# -*- coding: utf-8 -*-
"""Combined breakfast and lunch.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-zR7q-f4J3pmeu2QCA3fsQdkxpEAQaJz
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
from pathlib import Path

from pathlib import Path

breakfast_csv = Path("/content/drive/MyDrive/Capstone Project/Data/preprocess Data/data_breakfast_with_coordinates .csv")
lunch_csv     = Path("/content/drive/MyDrive/Capstone Project/Data/preprocess Data/data_lunch_with_coordinates.csv")

out_path = Path('/content/drive/MyDrive/Capstone Project/Data/preprocess Data/combined_breakfast_lunch.csv')

def normalize_cols(df: pd.DataFrame) -> pd.DataFrame:
    df = df.copy()
    df.columns = (
        df.columns
          .str.strip()
          .str.replace(r"\s+", "_", regex=True)
          .str.replace(r"[^A-Za-z0-9_]", "", regex=True)
          .str.lower()
    )
    return df

def ensure_session(df: pd.DataFrame, label: str) -> pd.DataFrame:
    df = df.copy()
    if "session" not in df.columns:
        df["session"] = label
    else:
        df["session"] = (
            df["session"].astype(str).str.title().str.strip()
              .replace({"Bfast":"Breakfast","Brkfst":"Breakfast","Lunch ":"Lunch"})
        )
        bad = ~df["session"].isin(["Breakfast","Lunch"])
        df.loc[bad, "session"] = label
    return df

b = pd.read_csv(breakfast_csv, low_memory=False)
l = pd.read_csv(lunch_csv, low_memory=False)

b = normalize_cols(b)
l = normalize_cols(l)

b = ensure_session(b, "Breakfast")
l = ensure_session(l, "Lunch")

combined = pd.concat([b, l], ignore_index=True, sort=False)

if "date" in combined.columns:
    combined["date"] = pd.to_datetime(combined["date"], errors="coerce")
if "served_total" in combined.columns:
    combined["served_total"] = pd.to_numeric(combined["served_total"], errors="coerce")

drop_idx = pd.Series(False, index=combined.index)
if "date" in combined.columns:
    drop_idx |= combined["date"].isna()
if "served_total" in combined.columns:
    drop_idx |= combined["served_total"].fillna(0).le(0)

if "date" in combined.columns and "served_total" in combined.columns:
    combined = combined[~(combined["date"].isna() & combined["served_total"].fillna(0).le(0))]

rows_total = len(combined)
cols_total = combined.shape[1]
by_sess = combined["session"].value_counts(dropna=False).to_dict() if "session" in combined.columns else {}

print(f"Rows: {rows_total} | Cols: {cols_total}")
print("By session:", by_sess)

combined.to_csv(out_path, index=False)

rows_total = len(combined)
cols_total = combined.shape[1]
by_sess = combined["session"].value_counts(dropna=False).to_dict() if "session" in combined.columns else {}

print(f"Saved: {out_path}")
print(f"Rows: {rows_total} | Cols: {cols_total}")
print("By session:", by_sess)

